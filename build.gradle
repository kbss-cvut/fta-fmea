buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

plugins {
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'war'
}

group = 'cz.cvut.kbss.analysis'
version = '0.0.1-SNAPSHOT'

compileJava {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

repositories {
    mavenCentral()
}

war {
    enabled = true
}

sourceSets.main.java.srcDirs += "src/main/generated"

dependencies {
    def jopaVersion = '2.3.1'
    implementation "cz.cvut.kbss.jopa:jopa-impl:$jopaVersion"
    implementation "cz.cvut.kbss.jopa:ontodriver-rdf4j:$jopaVersion"
    implementation 'cz.cvut.kbss.jsonld:jb4jsonld-jackson:0.15.0'
    implementation 'com.github.ledsoft:jopa-spring-transaction:0.3.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-core'
    implementation 'org.springframework.data:spring-data-commons'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // health check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    implementation 'com.fasterxml:classmate:1.7.0'
    implementation 'com.opencsv:opencsv:5.9'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    providedRuntime 'jakarta.servlet:jakarta.servlet-api'

    implementation 'javax.xml.bind:jaxb-api:2.3.1' // needed for java 17

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

// Propagate gradle project properties to spring boot
// https://stackoverflow.com/questions/33043866/referencing-gradle-properties-in-application-yml
processResources {
    filesMatching("**/application.properties") {
        expand( project.properties )
    }
}

test {
    useJUnitPlatform()
}



task printClasspath{
    def runtimeClasspath = sourceSets.main.runtimeClasspath
    inputs.files( runtimeClasspath )
    doLast {
        println runtimeClasspath.join( File.pathSeparator )
    }
}

task run(type: JavaExec) {

}